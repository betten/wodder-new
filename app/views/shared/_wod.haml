.wod{ :id => wod.id }
  .points
    - unless @current_user.present? and wod.has_point_from_user?(@current_user) and !@current_user.is_admin?
      .upvote= link_to 'â–²', up_vote_wod_path(wod), :title => "Upvote the wods you like so they move up the rankings!"
    .count= wod.points
  .content
    - unless defined? hide_header and hide_header
      .header
        - if wod.is_a?(GymWod)
          = link_to wod.gym.name, gym_path(wod.gym)
        - elsif wod.is_a?(UserWod)
          = link_to wod.title, wod_path(wod)
          %a{ :href => user_path(wod.user) }
            .sub posted by
            = wod.user.username

        - if wod.has_comments?
          = link_to pluralize(wod.comments.count, ' comment'), wod_path(wod), :class => "link"
        - else
          = link_to 'discuss', wod_path(wod), :class => "link"

        - if wod.is_a?(UserWod) and wod.user.is?(@current_user)
          = link_to 'edit', edit_wod_path(wod), :class => "link"
          .delete
            = form_for :wod, wod, :url => wod_path(wod), :html => { :method => :delete, :class => "delete-form" } do |w|
              = w.submit 'delete', :class => ["link", "delete-button"]

        - unless wod.is_a?(UserWod) and wod.user.is?(@current_user)
          - if @current_user and @current_user.has_saved_wod?(wod)
            %span.saved saved
            = link_to 'unsave', unsave_wod_path(wod), :class => ["link", "unsave-button"]
          - else
            = link_to 'save', save_wod_path(wod), :class => "link"
    .workout
      - if wod.is_a?(GymWod)
        != sanitize(wod.workout)
      - elsif wod.is_a?(UserWod)
        != clean_user_input(wod.workout)
      - else
        != sanitize(wod.workout)
